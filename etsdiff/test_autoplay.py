# Generated by Selenium IDE
import os
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test():
  def __init__(self, file):
    self.file = file
    self.file_prepare = file + '.prepare'
    self.file_run = file + '.run'
    self.file_release = file + '.release'

    self.driver = webdriver.Firefox()
    self.driver.set_window_size(1280, 1024)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def prepare(self):
    self.driver.get("http://localhost:8086/#/collectif/membres")
    self.driver.set_window_size(1280, 1024)
    time.sleep(2)
    os.remove(self.file_prepare)

  def run(self):
    self.driver.find_element(By.CSS_SELECTOR, ".go-to-home > img").click()
    time.sleep(6)
    os.remove(self.file_run)

  def release(self):
    self.driver.find_element(By.LINK_TEXT, "Notre collectif").click()
    time.sleep(2)
    os.remove(self.file_release)
  
def wait_for_file(file):
    while not os.path.exists(file):
        time.sleep(1)
  
if __name__ == '__main__':
    import sys
    if len(sys.argv) < 2:
        sys.exit("ERROR: missing filename argument")
    test = Test(sys.argv[1])
    while True:
        wait_for_file(test.file_prepare)
        test.prepare()
        wait_for_file(test.file_run)
        test.run()
        wait_for_file(test.file_release)
        test.release()
